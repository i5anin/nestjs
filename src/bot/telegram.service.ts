import { Injectable } from '@nestjs/common';
import { Telegraf } from 'telegraf';
import { Message } from 'telegraf/typings/core/types/typegram';

@Injectable()
export class TelegramService {
  private bot: Telegraf;

  constructor() {
    const token = process.env.BOT_TOKEN;
    if (!token) {
      throw new Error('‚ùå BOT_TOKEN –Ω–µ –∑–∞–¥–∞–Ω –≤ .env');
    }

    this.bot = new Telegraf(token);

    // –ö–æ–º–∞–Ω–¥–∞ /start
    this.bot.start((ctx) => {
      console.log(`üì• /start –æ—Ç ${ctx.from.username || ctx.from.id}`);
      ctx.reply('üëã Hello from NestJS bot');
    });

    // –ö–æ–º–∞–Ω–¥–∞ /ping
    this.bot.command('ping', (ctx) => {
      console.log(`üì• /ping –æ—Ç ${ctx.from.username || ctx.from.id}`);
      ctx.reply('üèì pong');
    });

    // –õ–æ–≤–∏–º –≤—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è
    this.bot.on('message', (ctx) => {
      const msg = ctx.message as Message;
      const from = ctx.from?.username || ctx.from?.id;

      if ('text' in msg) {
        console.log(`üí¨ –¢–µ–∫—Å—Ç –æ—Ç ${from}: ${msg.text}`);
      } else {
        console.log(`üìé –ù–µ-—Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç ${from}`);
      }
    });
  }

  async launch() {
    console.log('ü§ñ bot.launch()...');
    await this.bot.launch();
    console.log('‚úÖ bot –∑–∞–ø—É—â–µ–Ω');
  }
}
